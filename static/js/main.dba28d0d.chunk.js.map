{"version":3,"sources":["helper.js","components/HelperNFT.js","components/Login.js","components/Villain.js","components/Recruitment.js","components/Events.js","components/BondingCurve.js","components/MainMenu.js","components/AttributePage.js","components/WalletStatus.js","components/Villains.js","components/Dapp.js","fonts/DotBoundary/dotboundary-fixed.otf","fonts/PressStart2P.ttf","index.js"],"names":["minMaxRGB","val","Math","min","max","get_rgb","rgb","adj","r","g","b","ret","draw_villain","ctx","villain","pixelData","factor","j","length","attr","numBlessed","numPunished","pixels","name","z","useMap","y","parseInt","x","fillStyle","fillRect","short_addr","addr","num","slice","update_cache","attrName","prevState","statusData","localStorage","setItem","HelperNFT","toolTipDiv","awardItem","address","data","hasProvider","networkReady","useState","imgSource","imgSourceValid","state","setState","imgSrcStyle","fontSize","style","textAlign","width","padding","className","OverlayTrigger","placement","overlay","Tooltip","type","required","value","onChange","event","target","valid","match","display","marginTop","alt","border","maxWidth","src","background","borderColor","onClick","disabled","classes","keyField","rows","columns","tableLayout","color","rowStyle","row","rowIndex","fontWeight","Login","loginFunc","password","setPassword","fontFamily","onSubmit","ATTR_TABLE_COLUMNS","Villain","villainData","userAddress","tribulate","valhalla","pricing","categories","vId","useParams","canvasRendered","setCanvasRendered","canvasRef","useRef","useEffect","canvas","current","getContext","drawCanvas","mainStyle","i","cat","charAt","toUpperCase","s","split","push","height","ref","Recruitment","recruitMember","isApproved","getApproval","defaultValue","approved","setApproved","sAddr","sId","inputChanged","checkApproval","ethers","utils","isAddress","then","result","constants","AddressZero","recruitText","approvalText","to","opacity","whiteSpace","Events","radioValue","setRadioValue","showData","overflowY","ButtonGroup","toggle","margin","map","radio","idx","ToggleButton","variant","checked","e","currentTarget","BondingCurve","curves","labels","recruit","numBVAlive","datasets","rp","label","fill","vp","options","animation","duration","tooltips","enabled","hover","mode","plugins","title","text","scales","MainMenu","pathname","useLocation","activeStyle","normalStyle","alignItems","justifyContent","Image","marginRight","link","ATTRIBUTE_LIST","ATTRIBUTE_CATEGORIES","Object","keys","deploymentInput","AttributePage","props","categoryName","console","log","initialState","attrFilter","init","this","React","createRef","key","xFactor","yFactor","invert","includes","draw","els","category","remaining","initial","minWidth","marginBottom","attrData","Card","Body","Title","replace","Text","CardDeck","flexWrap","borderRadius","onChangeFilter","bind","concat","renderAttributeGrid","Component","WalletStatus","onCorrectNetwork","connectWallet","blockNumber","currentBlock","cachedBlock","overflow","blockDiff","mainDiv","float","href","rel","RADIOS","HELPER_TEXTS","Villains","showFilter","onValueChange","force","villains","v","isPlunder","sacrificeAddr","id","metadata","sacrificeId","vCat","titleDiv","owner","textDecoration","helperText","isUserVillains","renderVillainGrid","PASSWORD","CHAIN_ID_MAP","1","3","DYNAMIC_CACHE_VARIABLES","linkFormatter","cell","VALHALLA_COLUMNS","RECRUITS_COLUMNS","TRIBULATIONS_COLUMNS","HELPERMINTS_COLUMNS","attributesToCategories","categoriesToAttributes","attrDeployData","attrNameToData","Dapp","getItem","contractAddresses","clear","isAuthenticated","storedPwd","bcrypt","compareSync","tokenData","undefined","selectedAddress","balance","txBeingSent","transactionError","networkError","currentNetwork","existingVillains","userVillains","showModal","events","valhallas","recruits","tribulations","helperMints","authenticated","handleOpenModal","handleCloseModal","document","body","window","ethereum","on","location","reload","_provider","providers","Web3Provider","_asyncInit","pwd","_authenticate","fontStyle","basename","hashType","_connectWallet","path","_awardItem","_recruitMember","nftContractAddr","_isApproved","_getApproval","exact","children","memberId","_tribulate","minAmt","_valhalla","position","isOpen","contentLabel","onRequestClose","overlayClassName","contractArtifact","Contract","abi","getSigner","a","_checkNetwork","listAccounts","cachedVals","varName","cachedVal","JSON","parse","cachedPixelData","_getPixelData","stringify","request","method","message","toast","error","_helperContracts","_getHelperContracts","_setupContractData","_bvContract","makeContract","BitVillainsArtifact","_initialize","tx","from","tokenId","pricePaid","nextRecruitmentPrice","newValhallaPrice","membersAlive","reserve","eventKey","toShort","getAddress","formatEther","toString","_memberToRecruitedMap","txHash","transactionHash","priceReceived","nextRecruitPrice","ownerShort","who","isPunishment","whoShort","_updateDynamicData","_updateDynamicDataInterval","setInterval","MILLISECONDS_IN_SECOND","newAddress","_stopPollingData","_resetState","_intializeEthers","queryFilter","filters","Transfer","eventResults","args","MemberRecruited","MemberToValhalla","Tribulation","helperContracts","BVTest721Artifact","BVTest1155Artifact","dataHex","numAttrs","idx1","idx2","numRemaining","attrManIdx","attrIdx","attrIdxMap","attrCategory","attrs","m_attrMansStruct","attrManData","attrDataAll","parseManagerData","m_sizesNumRep","count","m_attrsStruct","numVillains","getMemberAttributes","k","attrIdxTmp","m_attrMap","attrMap","m_sacrificeMap","nftContract","ERC721Artifact","tokenURI","getValhallaPrice","getTribulatePrice","tp","getBlockNumber","l","getApproved","_dismissTransactionError","_sendTx","approve","recruitMemberWith721","parseEther","gasLimit","func","hash","success","wait","receipt","status","Error","code","getNetwork","networkId","chainId","_dismissNetworkError","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.dba28d0d.chunk.js","sourcesContent":["function minMaxRGB(val){\n    return Math.min(Math.max(0, val), 255);\n}\n\nexport function get_rgb(rgb, adj=0){\n    const r = (rgb>>16)&0x0ff;\n    const g = (rgb>>8)&0x0ff;\n    const b = (rgb)&0x0ff;\n    const ret = [minMaxRGB(r+adj), minMaxRGB(g+adj), minMaxRGB(b+adj)]\n    return ret;\n}\n\nexport function draw_villain(ctx, villain, pixelData, factor=5){\n    for (let j = 0;j< villain['attrs'].length; j++){\n        const attr = villain['attrs'][j];\n        const numBlessed = villain['numBlessed'];\n        const numPunished = villain['numPunished'];\n        const adj = (numBlessed - numPunished) * 16;\n        let pixels = pixelData[attr.name].pixels;\n        for (var z = 0;z < pixels.length; z++)\n        {\n            if(!pixelData[attr.name].useMap[z])\n                continue;\n            var y = parseInt(z/16) * factor;\n            var x = z % 16 * factor;\n            let rgb = get_rgb(pixels[z], adj);\n            ctx.fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n            ctx.fillRect(x,y, factor, factor);\n        }\n    }\n\n\n}\n\nexport function short_addr(addr, num=6){\n    if(!addr)\n        return \"\";\n    return addr.slice(0, num) + \"...\" + addr.slice(-4);\n}\n\nexport function update_cache(attrName, val, prevState){\n    const statusData = {...prevState.statusData};\n    statusData[attrName] = val;\n    localStorage.setItem(attrName, val);\n    return {statusData};\n}\n\nexport function isValidURL(string) {\n  var res = string.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*)/g);\n  return (res !== null)\n};\n","import React, {useState} from \"react\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {isValidURL} from \"../helper.js\";\nimport {Tooltip, OverlayTrigger} from 'react-bootstrap';\n\nexport function HelperNFT({ awardItem, address, data, hasProvider, networkReady}) {\n  const [state, setState] = useState({\n      imgSource: \"./images/sampleNFT.png\",\n      imgSourceValid: true\n  });\n  const rowStyle = (row, rowIndex) => {\n      let style = {fontWeight:'normal'};\n      if (row[\"to\"] === address){\n          style['fontWeight'] = 'bold';\n      }\n      return style;\n  };\n\n  function inputChanged(event){\n      const val = event.target.value\n      let valid = state.imgSourceValid;\n      if(event.target.name === 'imgSource'){\n        if(val === \"\" || isValidURL(val))\n          valid = true;\n        else\n          valid = false;\n      }\n      setState({\n        ...state,\n        [event.target.name]: val,\n        imgSourceValid: valid\n      });\n  }\n\n  let toolTipDiv;\n  const imgSrcStyle = {fontSize:'.7em'};\n  if(state.imgSourceValid)\n    toolTipDiv=<div>Change URL for NFT image (can be blank)</div>;\n  else{\n    toolTipDiv=<div>Invalid URL</div>;\n    imgSrcStyle['background'] = 'pink';\n  }\n  return (\n    <div style={{textAlign:'left', width:'50%', padding:\"1%\"}} className='MainBodyElement'>\n      <h4>Generate a Sample Sacrificial NFT</h4>\n          <label>Image metadata source: </label>\n          <OverlayTrigger placement=\"top\" overlay={<Tooltip>{toolTipDiv}< /Tooltip>}>\n          <input type=\"text\" name=\"imgSource\" required\n            value={state.imgSource}\n            onChange={inputChanged}\n            style={imgSrcStyle}\n          /></OverlayTrigger>\n          <br />\n          <div style={{display:'inline-block'}}>\n          {(state.imgSourceValid && state.imgSource)&& \n          <div style={{marginTop:'1%', display: 'inline-block'}} >\n          <img alt=\"NFT metadata\" style={{border:'4px solid #008080', maxWidth:'30%'}} src={state.imgSource} />\n          </div>}\n          <input style={{display: 'inline-block', background:'#008080', borderColor:'black'}} className=\"btn btn-primary\"\n            value=\"Mint NFT\" \n            type=\"button\"\n            onClick={(event) => {\n              if (address) {\n                awardItem(address, state.imgSource);\n              }\n            }}\n            disabled={(!hasProvider || !networkReady) || !state.imgSourceValid}\n          />\n          </div>\n      <br /><br />\n      <h4>Sacrificial NFT Mints</h4>\n        <BootstrapTable classes=\"EventsTable\" keyField='tokenId' data={ data.rows } columns={ data.columns } style={{tableLayout:'auto', color:'blue'}} rowStyle={rowStyle}/>\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport './Dapp.css';\n\nexport function Login({ loginFunc }) {\n  const [password, setPassword] = useState('')\n  return (\n    <div className=\"Login\" style={{fontFamily:'PressStart2P', fontSize:'.8em'}}>\n      <h4>Login BitVillains Beta</h4>\n      <form\n        onSubmit={(event) => {\n          loginFunc(password);\n        }}\n      >\n        <div className=\"form-group\" style={{width:'50%'}}>\n          <input className=\"form-control\" type=\"text\" name=\"password\" required\n          onChange={(event)=>{setPassword(event.target.value)}}\n          />\n          <br />\n          <input style={{background:'#008080', borderColor:'black'}} className=\"btn btn-primary\"\n            value=\"Login\" \n            type=\"button\"\n            onClick={(event) => {\n              loginFunc(password);\n            }}\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, {useState, useRef, useEffect} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {draw_villain, short_addr} from \"../helper.js\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport './Dapp.css';\n\nconst IMG_SIZE = 384;\nconst ATTR_TABLE_COLUMNS = [\n    {'dataField': 'cat', 'text': 'Category'},\n    {'dataField': 's', 'text': 'Attribute'}\n];\nexport function Villain({villainData, pixelData, userAddress, tribulate, valhalla, pricing, categories}) {\n  let {vId} = useParams();\n  const [canvasRendered, setCanvasRendered] = useState(false);\n  const canvasRef = useRef();\n  const villain = villainData[vId];\n\n  function drawCanvas(){\n    const canvas = canvasRef.current;\n    if(canvas && !canvasRendered && pixelData){\n        draw_villain(canvas.getContext('2d'), villain, pixelData, canvas.getContext(\"2d\").canvas.width/16);\n        setCanvasRendered(true);\n    }\n  }\n\n  useEffect(() =>{\n    drawCanvas();\n  });\n  const mainStyle ={width:IMG_SIZE*1.15, textAlign:'center'};\n  if(!villain){\n    return(<div style={mainStyle} className=\"MainBodyElement\">\n      <h4>Villain {vId} not found!</h4>\n    </div>);\n  }\n  const data = [];\n  for (var i=0; i<villain['attrs'].length; i++){\n    const attr = villain['attrs'][i];\n    let cat = categories[i];\n    cat = cat.charAt(0).toUpperCase() + cat.slice(1);\n    let s = \"\";\n    for (const w of attr['name'].split(/(?=[A-Z])/))\n        s+=w+\" \";\n    data.push({cat, s});\n  }\n  return (\n    <div style={mainStyle} className=\"MainBodyElement\">\n      <h4>Villain {vId}</h4>\n      <div><canvas height={IMG_SIZE} width={IMG_SIZE} ref={canvasRef} /></div>\n      <br />\n      <div>Owner: {short_addr(villain['owner'], 8)}</div>\n      <div>Sacrifice Contract Addr: {short_addr(villain['sacrificeAddr'])}</div>\n      <div>Sacrifice Id: {villain['sacrificeId']}</div>\n      <BootstrapTable keyField='cat' classes=\"VillainDetailsTable\" data={data} columns={ATTR_TABLE_COLUMNS} style={{tableLayout:'auto', color:'blue'}}/>\n      <div>Times Blessed: {villain['numBlessed']}</div>\n      <div>Times Punished: {villain['numPunished']}</div>\n      <br />\n      {villain['owner'] === userAddress &&\n          <div>\n          <div>\n          <input className=\"btn btn-primary\" type=\"button\" value={\"Tribulation for \"+pricing.tribulate+\" ETH\"}\n             onClick={()=>tribulate(vId)}/>\n        </div>\n          <br />\n          <div>\n          <input className=\"btn btn-primary\" type=\"button\" value={\"Valhalla for \"+pricing.valhalla+\" ETH\"}\n             onClick={()=>valhalla(vId, 0)}/>\n        </div>\n        <br />\n        </div>\n      }\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport { ethers } from \"ethers\";\nimport {Link} from \"react-router-dom\";\nimport \"./Dapp.css\";\nimport {short_addr} from \"../helper.js\";\nimport {Tooltip, OverlayTrigger} from 'react-bootstrap';\n\nexport function Recruitment({ recruitMember, isApproved, getApproval, pricing, defaultValue, hasProvider, networkReady}) {\n  const [approved, setApproved] = useState(false);\n  const [state, setState] = useState({\n      sAddr: defaultValue,\n      sId: \"0\"\n  });\n  \n  function inputChanged(event){\n      const val = event.target.value\n      setState({\n        ...state,\n        [event.target.name]: val\n      });\n      let sAddr = state.sAddr;\n      let sId = state.sId;\n      if(event.target.name === 'sAddr')\n          sAddr = val;\n      else if(event.target.name === 'sId')\n          sId = val;\n      checkApproval(sAddr, sId);\n  }\n\n  function checkApproval(sAddr, sId){\n      if(ethers.utils.isAddress(sAddr) && sId !== \"\"){\n          isApproved(sAddr, sId).then((result)=>{\n            setApproved(result !== ethers.constants.AddressZero);\n          });\n      }\n\n  }\n\n  function recruitMemberClicked(event){\n      if (state.sAddr && state.sId) {\n        recruitMember(state.sAddr, state.sId).then((result)=>{\n      });\n      }\n    }\n  function getApprovalClicked(event){\n      if (state.sAddr && state.sId) {\n        getApproval(state.sAddr, state.sId).then((result)=>{\n            checkApproval(state.sAddr, state.sId);\n        });\n      }\n    }\n\n  const recruitText = \"Recruit Member with sacrifice \" + (state.sId ? state.sId : '?') + \" from \"+short_addr(state.sAddr);\n  const approvalText = \"Get Approval for \" + (state.sId ? state.sId : '?') + \" from \"+short_addr(state.sAddr);\n  return (\n    <div style={{textAlign:'left', width:'80%', padding:\"1%\"}} className=\"MainBodyElement\">\n      <h4>Recruit a New BitVillain</h4>\n      <form\n      >\n        <p>\n        An NFT sacrifice is required to recruit a new BitVillain. Even if a BitVillain is sent to Valhalla, the sacrifice will remain locked up in perpetuity.\n        </p>\n        <p>\n         In the testnet environment, there is a <Link to=\"/helper\">sample NFT contract </Link>used to generate a new sacrificial NFT for recruitment. Once minted successfully, it appears in the \"Sacrificial NFT Mints\" table with the corresponding owner and generated sacrifice id.\n        <br />\n        <br />\n        The sample NFT contract (and like all ERC721 standard NFTs on ethereum) first requires an approval transaction to allow the BV contract to transfer the sacrifice id to itself. After the approval transaction is confirmed, the sacrifice can be used to recruit a new BitVillain.\n        </p>\n        <div className=\"form-group\">\n          <label>Sacrifice Contract address (pre-populated with sample NFT)</label>\n          <input className=\"form-control\" type=\"text\" name=\"sAddr\" required\n            value={state.sAddr}\n            onChange={inputChanged}\n            disabled={true}\n          />\n        </div>\n        <br />\n        <div className=\"form-group\">\n          <label>Sacrifice Id</label>\n          <input className=\"form-control\" type=\"number\" name=\"sId\" required onChange={inputChanged} value={state.sId}/>\n        </div>\n        <br />\n        <div>\n        {approved ?\n        <div className=\"form-group\">\n          <OverlayTrigger placement=\"top\" overlay={<Tooltip >Sacrifice has already been approved< /Tooltip>}><div style={{opacity:'50%', background:'#008080', borderColor:'black'}} className=\"btn btn-primary\">{approvalText}</div></OverlayTrigger>\n        </div>\n        :\n        <div className=\"form-group\">\n          <input style={{background:'#008080', borderColor:'black', whiteSpace:'normal'}} className=\"btn btn-primary\" type=\"button\" value={approvalText} disabled={approved || (!hasProvider || !networkReady)}\n             onClick={getApprovalClicked}/>\n        </div>\n        }\n        <br />\n        {approved ?\n        <div className=\"form-group\">\n          <input style={{background:'#008080', borderColor:'black', whiteSpace:'normal'}} className=\"btn btn-primary\" type=\"button\" value={recruitText}\n             disabled={!approved || (!hasProvider || !networkReady)}\n             onClick={recruitMemberClicked}/>\n        </div>\n        :\n        <div className=\"form-group\">\n          <OverlayTrigger placement=\"top\" overlay={<Tooltip>Sacrifice needs approval before recruitment can occur< /Tooltip>}><div style={{opacity:'50%', background:'#008080', borderColor:'black'}} className=\"btn btn-primary\">{recruitText}</div></OverlayTrigger>\n        </div>\n        }\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, {useState} from \"react\";\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport {ButtonGroup, ToggleButton} from 'react-bootstrap';\nimport './Events.css';\nimport './Dapp.css';\n\nexport function Events({data}) {\n    const [radioValue, setRadioValue] = useState('recruits');\n    const radios = [\n        { name: 'Recruits', value: 'recruits' },\n        { name: 'Tribulations', value: 'tribulations' },\n        { name: 'Valhalla', value: 'valhallas' }\n    ];\n    const showData = data[radioValue];\n    return (\n        <div className='MainBodyElement' style={{width:'80%', padding:'1%', overflowY:'scroll'}}>\n      <h4>Events</h4>\n        <ButtonGroup className='EventsControlButton' toggle style={{width:'50%', margin:'0 auto', padding:'0'}}>\n        {radios.map((radio, idx) => (\n          <ToggleButton\n            className=\"EventsChoiceToggle\"\n            key={idx}\n            type=\"radio\"\n            variant=\"secondary\"\n            name=\"radio\"\n            value={radio.value}\n            checked={radioValue === radio.value}\n            onChange={(e) => setRadioValue(e.currentTarget.value)}\n          >\n            {radio.name}\n          </ToggleButton>\n        ))}\n        </ButtonGroup>\n        <br />\n        <BootstrapTable classes=\"EventsTable\" keyField='eventKey' data={ showData.rows } columns={ showData.columns }/>\n        </div>\n    );\n}\n","import React from \"react\";\nimport { Line } from 'react-chartjs-2';\n\n\nexport function BondingCurve({ awardItem, address, curves}) {\n  return (\n    <div style={{textAlign:'left', width:'75%', padding:\"1%\"}} className='MainBodyElement'>\n      <h4>Bonding Curve</h4>\n      <Line\n            data={{\n                labels: curves.recruit.map(x => x.numBVAlive),\n                datasets: [\n                    {\n                        data: curves.recruit.map(x => x.rp),\n                        label: \"Recruitment Price (ETH)\",\n                        borderColor: \"#008080\",\n                        fill:false\n                    },\n                    {\n                        data: curves.valhalla.map(x => x.vp),\n                        label: \"Valhalla Price (ETH)\",\n                        borderColor: \"#002080\",\n                        fill:false\n                    }\n                ]\n            }}\n            options={\n                {animation:{duration:0}, \n                tooltips: {enabled: false}, \n                hover: {mode: null},\n                plugins: {\n                    title:{display:false, text:'hi'}\n                },\n                scales: {\n                    y: {\n                        title: {\n                            display: true,\n                            text: 'Price (ETH)'\n                        }\n                    },\n                    x: {\n                        title: {\n                            display: true,\n                            text: 'BitVillains At Large'\n                        }\n                    }\n                }\n            }}\n      />\n    </div>\n  );\n}\n","\nimport React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport {Image, Tooltip, OverlayTrigger} from 'react-bootstrap';\nimport {short_addr} from \"../helper.js\";\nexport function MainMenu({address}) {\n  const {pathname} = useLocation();\n  const activeStyle={background:'#008080'};\n  const normalStyle = {}\n  const mainMenuBarData = [\n        {text:'Home', link:'/index'},\n        {text:'Recruitment', link:'/recruitment'},\n        {text:'Helper NFT', link:'/helper'},\n        {text:\"Rogues' Gallery\", link:'/bitVillains'},\n        {text:'Plunder', link:'/plunder'}\n  ];\n  const intelMenuData = [\n        {text:'Attribute Pool', link:'/attributePool'},\n        {text:'Events', link:'/events'},\n        {text:'BondingCurve', link:'/bondingCurve'},\n        {text:'My BitVillains', link:'/userBitVillains'}\n  ];\n  let val = <div />;\n  if(address){\n    val = (<div>Connected Wallet: {short_addr(address)}</div>);\n  }\n  return (\n      <div style={{display:'flex', alignItems:'center', justifyContent:'start', background:'rgba(0, 0, 0, 0.85)', padding:'4px'}}>\n        <Image className=\"MainLogo\" src={\"/images/logo1.png\"} style={{marginRight:'5%'}}/>\n        <ul className=\"mainNavBar\">\n          {mainMenuBarData.map(function(x, i){\n              return <li className='navEl' key={i} style={pathname===x['link'] ? activeStyle : normalStyle}><Link className={'a'} to={x['link']}>{x['text']}</Link></li>;\n          })}\n          <li className=\"mainDropDown\">\n          <div className=\"dropbtn\">Intel</div>\n          <div className=\"mainDropDown-content\">\n          {intelMenuData.map(function(x, i){\n              return <Link className=\"dropDownItem\" key={i} to={x['link']} style={pathname===x['link'] ? activeStyle : normalStyle}>{x['text']}</Link>\n          })}\n          </div>\n          </li>\n          <li className='walletEl'>\n         <OverlayTrigger placement=\"bottom\" overlay={<Tooltip >{address}< /Tooltip>}>{val}</OverlayTrigger>\n          </li>\n        </ul>\n    </div>\n  );\n};\n","import React from \"react\";\nimport contractAddresses from \"../contracts/addresses.json\";\nimport categoriesToAttributes from \"../categories.json\"\nimport deploymentInput from \"../deployment_input.json\";\n// We'll use ethers to interact with the Ethereum network and our contract\nimport {Card, CardDeck} from 'react-bootstrap';\nimport {get_rgb} from \"../helper.js\";\nimport './Dapp.css';\n\nconst ATTRIBUTE_CATEGORIES = Object.keys(deploymentInput);\nlet ATTRIBUTE_LIST;\n\nexport class AttributePage extends React.Component {\n  constructor(props) {\n\n    if(!ATTRIBUTE_LIST){\n        ATTRIBUTE_LIST = [];\n        for (const categoryName of ATTRIBUTE_CATEGORIES) {\n            console.log(categoryName);\n            for (const attr of deploymentInput[categoryName]) {\n                let name = attr['name'];\n                ATTRIBUTE_LIST.push(name);\n            }\n        }\n    }\n    super(props);\n\n    this.initialState = {\n        canvasRendered : false,\n        attrFilter: 'all'\n    }\n\n    this.state = this.initialState;\n    this.init();\n  }\n\n  init(){\n    for (var attrName of ATTRIBUTE_LIST) {\n        this[`ref_${attrName}`] = React.createRef();\n    }\n\n  }\n\n  componentDidMount() {\n    this.drawCanvas();\n  }\n\n  componentDidUpdate() {\n    this.drawCanvas();\n  }\n\n  drawCanvas() {\n    if (!this.props.pixelData || this.state.canvasRendered)\n        return;\n    for (var key of ATTRIBUTE_LIST) {\n        const canvas = this[`ref_${key}`].current;\n        if (!!canvas)\n        {\n            const ctx = canvas.getContext(\"2d\");\n            let xFactor = ctx.canvas.width/16;\n            let yFactor = ctx.canvas.height/16;\n            let pixels = this.props.pixelData[key]['pixels'];\n            let invert = false;\n            if(key.includes('White'))\n                invert = true;\n            for (var i = 0;i < pixels.length; i++)\n            {\n                var y = parseInt(i/16) * yFactor;\n                var x = (i % 16) * xFactor;\n                let draw = false;\n                if(this.props.pixelData[key]['useMap'][i])\n                    draw = true;\n                if(draw){\n                    let rgb = get_rgb(pixels[i]);\n                    ctx.fillStyle = `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n                    ctx.fillRect(x,y, xFactor, yFactor);\n                }\n                else if(invert){\n                    ctx.fillStyle = `rgb(0, 0, 0)`;\n                    ctx.fillRect(x,y, xFactor, yFactor);\n                }\n            }\n            this.setState({canvasRendered:true});\n        }\n    }\n  }\n\n  renderAttributeGrid() {\n    if (!this.props.pixelData)\n        return;\n\n    const els = [];\n    let count = 0;\n    for (var key of ATTRIBUTE_LIST) {\n        let remaining = 'loading';\n        let initial = 'loading';\n       var category;\n       const style ={textAlign:'center', minWidth: \"10rem\", maxWidth: \"10rem\", borderColor:'#008080', marginBottom: '1%', marginRight:'1%'};\n       if (this.props.attrData){\n            let attrData = this.props.attrData[key];\n            if (attrData){\n                remaining = attrData['remainingGenePool'];\n                initial = attrData['initialGenePool'];\n                category = attrData['category'];\n            }\n        }\n        if (this.state.attrFilter!=='all' && this.state.attrFilter!==category){\n            style['display'] = 'none';\n        }\n    els.push(<Card key={key} style={style}><Card.Body><Card.Title style={{fontSize:'.9em'}}>{key.replace(/([A-Z])/g, ' $1')}</Card.Title><canvas width='128px' height='128px' style={{margin:'0', padding:'0', width:'100%'}} ref={this[`ref_${key}`]}/><Card.Text>{remaining}/{initial}</Card.Text></Card.Body></Card>);\n    count ++;\n    }\n        return (\n            <CardDeck style={{display:'flex', flexWrap:'wrap', width:'100%'}}>\n            {els}\n            </CardDeck>\n        );\n    }\n\n  onChangeFilter(e){\n    this.setState({attrFilter:e.target.value})\n    this.drawCanvas();\n  }\n\n\n  render() {\n    return (\n       <div style={{width:'75%', margin: 'auto', padding:'0.5%'}}>\n       <div>\n       <div style={{borderRadius:'5px', padding:'2px', background:'#D2D2D2', display:'inline-block'}}>\n       <h4>Attribute Pool</h4>\n        Attribute Filter: {\" \"}\n       <select onChange={this.onChangeFilter.bind(this)} style={{margin: '0 auto'}}>\n        {['all'].concat(ATTRIBUTE_CATEGORIES).map(num => <option value={num} key={num}>{num}</option>)}\n        </select>\n        </div>\n        </div>\n        <br />\n        {this.renderAttributeGrid()}\n        </div>\n    );\n  }\n}\n\nexport default AttributePage;\n","import React from \"react\";\nimport './Dapp.css';\n\nexport function WalletStatus({statusData, hasProvider, onCorrectNetwork, networkReady, connectWallet }) {\n  const blockNumber = statusData.currentBlock || 'loading';\n  const cachedBlock = statusData.cachedBlock || 'loading';\n  const mainStyle = {overflow:'hidden', padding:'5px', fontSize:'8px', background:'yellow', color:'black', width:'33%', margin:'0 auto'};\n  if (statusData.currentBlock && hasProvider && networkReady){\n      if(!statusData.cachedBlock)\n          mainStyle['background'] = 'red';\n      else{\n          const blockDiff = blockNumber - cachedBlock;\n          if (blockDiff > 20){\n              mainStyle['background'] = 'red';\n          }\n          else if (blockDiff > 10){\n              mainStyle['background'] = 'pink';\n          }\n          else if (blockDiff > 1){\n              mainStyle['background'] = 'yellow';\n          }\n          else{\n              mainStyle['background'] = '#008080';\n              mainStyle['color'] = 'white';\n          }\n      }\n  }\n  let mainDiv =(\n  <div>\n        <div style={{float:'left'}}>\n        Latest Block: {blockNumber}\n        </div>\n        <div style={{float:'right'}}>\n        Displayed Block: {cachedBlock}\n        </div>\n  </div>);\n  if(!hasProvider){\n      mainDiv = <div>No Web3 provider detected, blockchain data cannot be displayed.<br />Please install <a href=\"http://metamask.io\" target=\"_blank\" rel=\"noopener noreferrer\"> MetaMask</a></div>;\n      mainStyle['fontSize'] = '20px';\n      mainStyle['background'] = 'red';\n      mainStyle['width'] = '80%';\n      mainStyle['textAlign'] = 'center';\n  }\n  else if(!onCorrectNetwork){\n      mainDiv = <div>Connected to incorrect network, blockchain data cannot be displayed.<br />Please connect to correct network (Ropsten) in MetaMask</div>;\n      mainStyle['fontSize'] = '18px';\n      mainStyle['background'] = 'red';\n      mainStyle['width'] = '80%';\n      mainStyle['textAlign'] = 'center';\n  }\n  else if(!networkReady){\n      mainDiv = <div><p>Connected to correct network but awaiting Web3 connection, please connect in MetaMask</p>\n        <button onClick={connectWallet} type=\"button\">Connect</button>\n          </div>;\n      mainStyle['fontSize'] = '12px';\n      mainStyle['background'] = 'yellow';\n      mainStyle['width'] = '80%';\n      mainStyle['textAlign'] = 'center';\n  }\n\n  return (\n    <div style={mainStyle}>\n      {mainDiv}\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport {Card, CardDeck, Tooltip, OverlayTrigger} from 'react-bootstrap';\nimport {draw_villain} from \"../helper.js\";\nimport { Link } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\n\nconst MAX_VILLAINS = 100;\nconst RADIOS = [\n    { name: 'All', value: 'all' },\n    { name: 'Genesis', value: 'genesis' },\n    { name: 'At Large', value: 'atlarge' },\n    { name: 'Valhalla', value: 'valhalla' }\n];\nconst HELPER_TEXTS = {\n    'genesis': \"Genesis BV's were created at contract initiation and are not eligble for Valhalla rewards\",\n    'atlarge': \"At Large BV's are created but not currently in Valhalla\",\n    'valhalla':\"Valhalla BV's have been sent permanently to Valhalla\",\n    'all': \"\"\n}\nexport class Villains extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.initialState = {\n        canvasRendered : false,\n        showFilter:'all'\n    }\n\n    this.state = this.initialState;\n    for (var i = 0;i < MAX_VILLAINS; i++) {\n        this[`ref_${i}`] = React.createRef();\n    }\n    this.onValueChange=this.onValueChange.bind(this);\n  }\n\n  componentDidUpdate() {\n    this.drawCanvas(true);\n  }\n\n  componentDidMount() {\n    this.drawCanvas();\n  }\n  onValueChange(event) {\n    console.log(event.target.value);\n    this.setState({\n      showFilter: event.target.value\n    });\n  }\n\n  drawCanvas(force=false){\n    if (!this.props.pixelData || (!force && this.state.canvasRendered))\n        return;\n    for (let i = 0;i < this.props.villains.length; i++) {\n        const canvas = this[`ref_${i}`].current;\n        if (!!canvas && this.props.pixelData)\n        {\n            const ctx = canvas.getContext(\"2d\");\n            const villain = this.props.villains[i];\n            // assume square canvas!\n            draw_villain(ctx, villain, this.props.pixelData, ctx.canvas.width/16);\n            if(!this.state.canvasRendered)\n                this.setState({canvasRendered:true});\n        }\n    }\n  }\n\n  renderVillainGrid() {\n    /*const renderTooltip = props => (\n        <Tooltip {...props}>Genesis BV</Tooltip>\n    );*/\n    const els = [];\n    for (let i = 0 ;i < this.props.villains.length; i++) {\n        let style = {minWidth: \"10rem\", maxWidth: \"10rem\"}\n        style['backgroundColor'] = 'white';\n        style['borderColor'] = '#008080';\n        style['borderWidth'] = '2px';\n        style['marginBottom'] = '1%';\n        style['marginRight'] = '1%';\n        const v = this.props.villains[i];\n        if(!this.props.isPlunder){\n            let vCat = 'atlarge';\n            let titleDiv = <div> BV {v.id} </div>;\n            if (v.owner === 'valhalla'){\n                vCat = 'valhalla';\n                style['backgroundColor'] = 'grey';\n                // only show tooltip if filtering display\n                if (this.state.showFilter=== 'all')\n                    titleDiv = <OverlayTrigger placement=\"top\" overlay={<Tooltip>In Valhalla< /Tooltip>}>{titleDiv}</OverlayTrigger>;\n            }\n            else if (v.sacrificeAddr === ethers.constants.AddressZero){\n                vCat = 'genesis';\n                style['backgroundColor'] = '#800000';\n                style['borderColor'] = 'black';\n                // only show tooltip if filtering display\n                if (this.state.showFilter=== 'all')\n                    titleDiv = <OverlayTrigger placement=\"top\" overlay={<Tooltip>Genesis BV< /Tooltip>}>{titleDiv}</OverlayTrigger>;\n            }\n            if (this.state.showFilter!=='all' && this.state.showFilter!==vCat){\n                style['display'] = 'none';\n            }\n            els.push(\n                    <Card key={i} style={style}>\n                    <Card.Body>\n                    <Card.Title>\n                    {titleDiv}\n                    </Card.Title>\n                    <canvas width='128px' height='128px' style={{width:'100%'}} ref={this[`ref_${i}`]}/>\n                    <Card.Text>\n                    </Card.Text>\n                    <Link style={{textDecoration:'none', color:'black'}} to={'/villain/' + v.id}>Details</Link>\n                    </Card.Body>\n                    </Card>);\n        }\n        else{\n            if (ethers.constants.AddressZero === v.sacrificeAddr)\n                continue;\n            style['minWidth'] = '16rem';\n            style['maxWidth'] = '20rem';\n            els.push(\n                    <Card key={i} style={style}>\n                    <Card.Body>\n                    <Card.Title>\n                        Sacrifice {v.id}\n                    </Card.Title>\n                    <Card.Text>\n                    {v.metadata ?\n                    <img alt=\"NFT metadata\" style={{border:'4px solid #008080', maxWidth:'30%'}} src={v.metadata} />\n                    :\n                    <div>Sacrifice Address: {v.sacrificeAddr}<br /><br />\n                    Sacrifice Id: {v.sacrificeId}<br /></div>}\n                    </Card.Text>\n                    </Card.Body>\n                    </Card>);\n        }\n    }\n        return (\n            <div>\n            <br />\n            <CardDeck style={{display:'flex', flexWrap:'wrap'}}>\n            {els}\n            </CardDeck>\n            </div>\n        );\n    }\n\n  render() {\n    const onValueChange = this.onValueChange;\n    const showFilter = this.state.showFilter;\n    const helperText = HELPER_TEXTS[showFilter];\n    return (\n       <div style={{width:'80%', margin: '0 auto'}}>\n       {(!this.props.isPlunder && !this.props.isUserVillains) &&\n       <div style={{borderRadius:'5px', padding:'2px', background:'#D2D2D2', display:'inline-block'}}>\n       <h4>Explore BitVillains</h4>\n        <form>\n        {RADIOS.map(function(x, i){\n            return (<div key={i}><label><input checked={showFilter === x['value']} type='radio' value={x['value']} name='showFilter' onChange={onValueChange}></input> {x['name']}</label></div>);\n        })}\n        </form>\n        <div style={{fontSize:'9px', float:'right'}}>{helperText}</div>\n        </div>\n        }\n        {this.renderVillainGrid()}\n        </div>\n    );\n  }\n\n}\n","import React from \"react\";\n\n// We'll use ethers to interact with the Ethereum network and our contract\nimport { ethers } from \"ethers\";\nimport bcrypt from 'bcryptjs';\n\n// We import the contract's artifacts and address here, as we are going to be\n// using them with ethers\nimport BVTest721Artifact from \"../contracts/BVTest721.json\";\nimport BVTest1155Artifact from \"../contracts/BVTest1155.json\";\nimport ERC721Artifact from \"../contracts/ERC721.json\";\nimport BitVillainsArtifact from \"../contracts/BitVillains.json\";\nimport contractAddresses from \"../contracts/addresses.json\";\nimport deploymentInput from \"../deployment_input.json\";\n\n// All the logic of this dapp is contained in the Dapp component.\n// These other components are just presentational ones: they don't have any\n// logic. They just render HTML.\nimport { HelperNFT } from \"./HelperNFT\";\nimport { Login } from \"./Login\";\nimport { Villain } from \"./Villain\";\nimport { Recruitment } from \"./Recruitment.js\";\nimport { Events } from \"./Events.js\";\nimport { BondingCurve } from \"./BondingCurve.js\";\nimport { MainMenu } from \"./MainMenu.js\";\nimport AttributePage from \"./AttributePage\";\nimport { WalletStatus } from \"./WalletStatus\";\nimport { Villains } from \"./Villains\";\nimport {update_cache, short_addr} from \"../helper.js\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport ReactModal from 'react-modal';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './Dapp.css';\n\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  Redirect,\n} from \"react-router-dom\";\n\nconst PASSWORD = \"$2a$10$eRHp8Jx2EoWK5x4BUFB2iOBWijwXObljzA9ZyZoUutnFCfzl.2Ai.\"\n// This is the Hardhat Network id, you might change it in the hardhat.config.js\n// Here's a list of network ids https://docs.metamask.io/guide/ethereum-provider.html#properties\n// to use when deploying to other networks.\n// const HARDHAT_NETWORK_ID = '31337';\n// const ROPSTEN_NETWORK_ID = '3';\nconst MILLISECONDS_IN_SECOND = 1000;\n\n// This is an error code that indicates that the user canceled a transaction\nconst ERROR_CODE_TX_REJECTED_BY_USER = 4001;\nconst CHAIN_ID_MAP = {1: 'Mainnet', 3: 'Ropsten'}\nconst CURRENT_CHAIN_ID = 3;\n\n// This component is in charge of doing these things:\n//   1. It connects to the user's wallet\n//   2. Initializes ethers and the Token contract\n//   3. Polls the user balance to keep it updated.\n//   4. Transfers tokens by sending transactions\n//   5. Renders the whole application\n//\n// Note that (3) and (4) are specific of this sample application, but they show\n// you how to keep your Dapp and contract's state in sync,  and how to send a\n// transaction.\n\nconst DYNAMIC_CACHE_VARIABLES = ['existingVillains', 'userVillains', 'attrData', 'pricing', 'cachedBlock'];\nfunction linkFormatter(cell, row, rowIndex){\n    return <a rel=\"noreferrer\" target=\"_blank\" href={\"https://ropsten.etherscan.io/tx/\"+row['txHash']}>{short_addr(row['txHash'])}</a>\n}\nconst VALHALLA_COLUMNS = [\n    {'dataField': 'txHash', 'text': 'Tx Hash', 'formatter':linkFormatter},\n    {'dataField': 'ownerShort', 'text': 'Owner', style: {}, },\n    {'dataField': 'id', 'text': 'BV Id'},\n    {'dataField': 'priceReceived', 'text': 'Valhalla Price'},\n    {'dataField': 'nextRecruitPrice', 'text': 'Next Recruit Price'},\n    {'dataField': 'newValhallaPrice', 'text': 'New Valhalla Price'},\n    {'dataField': 'membersAlive', 'text': 'Members Alive'},\n    {'dataField': 'reserve', 'text': 'BV Reserve'}];\nconst RECRUITS_COLUMNS = [\n    {'dataField': 'txHash', 'text': 'Tx Hash', 'formatter':linkFormatter},\n    {'dataField': 'toShort', 'text': 'Owner', style: {'width':'5px'}},\n    {'dataField': 'id', 'text': 'BV Id'},\n    {'dataField': 'pricePaid', 'text': 'Price Paid'},\n    {'dataField': 'nextRecruitmentPrice', 'text': 'Next Recruitment Price'},\n    {'dataField': 'newValhallaPrice', 'text': 'New Valhalla Price'},\n    {'dataField': 'membersAlive', 'text': 'Members Alive'},\n    {'dataField': 'reserve', 'text': 'BV Reserve'}];\nconst TRIBULATIONS_COLUMNS = [\n    {'dataField': 'txHash', 'text': 'Tx Hash', 'formatter':linkFormatter},\n    {'dataField': 'whoShort', 'text': 'Owner', style: {'width':'5px'}},\n    {'dataField': 'id', 'text': 'BV Id'},\n    {'dataField': 'result', 'text': 'Result'},\n    {'dataField': 'numPunished', 'text': 'Times Punished'},\n    {'dataField': 'numBlessed', 'text': 'Times Blessed'}];\nconst HELPERMINTS_COLUMNS = [\n    {'dataField': 'to', 'text': 'Owner', style: {'width':'5px'}},\n    {'dataField': 'tokenId', 'text': 'Token Id'}];\nlet attributesToCategories = {};\nlet categoriesToAttributes = {};\nlet attrDeployData = [];\nlet attrNameToData = {}\nfor (const categoryName of Object.keys(deploymentInput)) {\n    categoriesToAttributes[categoryName] = [];\n    for (const attr of deploymentInput[categoryName]) {\n        attributesToCategories[attr['name']] = categoryName;\n        categoriesToAttributes[categoryName].push(attr['name']);\n        attrNameToData[attr['name']] = attr;\n        attrDeployData.push(attr);\n    }\n}\n\n\nconst EXPECTED_LENGTH_HEX_NUM_IN_ATTR_POOL = 3;\nconst EXPECTED_LENGTH_HEX_NUM_ATTR = 2;\n\nexport class Dapp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    if(localStorage.getItem('contractAddress') !== contractAddresses['BitVillains']){\n        localStorage.clear();\n        localStorage.setItem('contractAddress', contractAddresses['BitVillains']);\n    }\n\n    let isAuthenticated = false;\n    const storedPwd = localStorage.getItem(\"cachedPassword\");\n    if (storedPwd && bcrypt.compareSync(storedPwd, PASSWORD)){\n        isAuthenticated = true;\n    }\n    // We store multiple things in Dapp's state.\n    // You don't need to follow this pattern, but it's an useful example.\n    this.initialState = {\n      // The info of the token (i.e. It's Name and symbol)\n      tokenData: undefined,\n      // The user's address and balance\n      selectedAddress: undefined,\n      balance: undefined,\n      // The ID about transactions being sent, and any possible error with them\n      txBeingSent: undefined,\n      transactionError: undefined,\n      networkError: undefined,\n      networkReady : false,\n      onCorrectNetwork: false,\n      currentNetwork: undefined,\n      canvasRendered: false,\n      existingVillains:  [],\n      userVillains: {},\n      pixelData: undefined,\n      showModal: false, \n      events: {\n          valhallas: {'rows': [], 'columns': VALHALLA_COLUMNS},\n          recruits: {'rows': [], 'columns': RECRUITS_COLUMNS},\n          tribulations: {'rows': [], 'columns': TRIBULATIONS_COLUMNS},\n          helperMints: {'rows': [], 'columns': HELPERMINTS_COLUMNS}\n      },\n      statusData: {},\n      authenticated: isAuthenticated,\n      curves: {\n          recruit : [],\n          valhalla : []\n      }\n    };\n    // cachedBlock is last time in current session block was updated (metadata)\n    // cachedBlockNumber is the actual value set in the dynamic data array\n    this.state = this.initialState;\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal () {\n    this.setState({ showModal: true });\n  }\n\n  handleCloseModal () {\n    this.setState({ showModal: false });\n  }\n\n  componentDidMount() {\n    document.body.style.background = 'linear-gradient(0deg, rgba(0,128,128,1) 0%, rgba(0,32,128,1) 100%) fixed';\n    // We reset the dapp state if the network is changed\n    if (window.ethereum){\n        window.ethereum.on(\"chainChanged\", ([networkId]) => {\n          window.location.reload();\n        });\n        this._provider = new ethers.providers.Web3Provider(window.ethereum);\n        this._asyncInit();\n    }\n    else{\n        this.setState({showModal:true})\n    }\n  }\n\n  _authenticate(pwd){\n    /*var salt = bcrypt.genSaltSync(10);\n    var hash = bcrypt.hashSync(pwd, salt);\n    */\n    if (bcrypt.compareSync(pwd, PASSWORD)){\n        this.setState({authenticated:true});\n        localStorage.setItem(\"cachedPassword\", pwd);\n    }\n  }\n\n  render() {\n    // Ethereum wallets inject the window.ethereum object. If it hasn't been\n    // injected, we instruct the user to install MetaMask.\n    if(!this.state.authenticated){\n      return <Login\n        loginFunc={(pwd) =>\n          this._authenticate(pwd)\n        }\n      />;\n    }\n\n    // If the token data or the user's balance hasn't loaded yet, we show\n    // a loading component.\n\n    // If everything is loaded, we render the application.\n    const fontStyle = {fontFamily:'PressStart2P', fontSize:'.8em'};\n    return (\n      <Router basename=\"\" hashType=\"noslash\">\n      <div style={fontStyle}>\n        <MainMenu\n          address={this.state.selectedAddress}\n        />\n        <div id=\"colorBar\" />\n        <div style={{}}>\n        <WalletStatus \n          statusData={this.state.statusData}\n          hasProvider={this._provider ? true : false}\n          onCorrectNetwork={this.state.onCorrectNetwork}\n          networkReady={this.state.networkReady}\n          connectWallet={() => this._connectWallet()}\n        />\n        </div>\n        <br />\n\n      <Switch>\n      <Route path=\"/attributePool\">\n        <AttributePage pixelData={this.state.pixelData} attrData={this.state.attrData} />\n      </Route>\n      <Route path=\"/bitVillains\">\n      <Villains isUserVillains={false}pixelData={this.state.pixelData} villains={this.state.existingVillains} />\n      </Route>\n      <Route path=\"/plunder\">\n      <Villains pixelData={this.state.pixelData} villains={this.state.existingVillains}  isPlunder={true}/>\n      </Route>\n      <Route path=\"/userBitVillains\">\n      <Villains isUserVillains={true} pixelData={this.state.pixelData} villains={this.state.userVillains[this.state.selectedAddress]?? []}/>\n      </Route>\n      <Route path='/helper'>\n          <HelperNFT\n            awardItem={(address, metadata) =>\n              this._awardItem(address, metadata)\n            }\n            address={this.state.selectedAddress}\n            data={this.state.events.helperMints}\n            hasProvider={this._provider ? true : false}\n            onCorrectNetwork={this.state.onCorrectNetwork}\n            networkReady={this.state.networkReady}\n          />\n      </Route>\n      <Route path='/bondingCurve'>\n          <BondingCurve\n            villains={this.state.existingVillains}\n            curves={this.state.curves}\n          />\n      </Route>\n      <Route path='/recruitment'>\n          <Recruitment\n            recruitMember={(sAddr, sId) =>\n              this._recruitMember(sAddr, sId)\n            }\n            isApproved={(nftContractAddr, sId) =>\n              this._isApproved(nftContractAddr, sId)\n            }\n            getApproval={(sAddr, sId) =>\n              this._getApproval(sAddr, sId)\n            }\n            pricing={this.state.pricing}\n            defaultValue={contractAddresses['BVTest721']}\n            hasProvider={this._provider ? true : false}\n            onCorrectNetwork={this.state.onCorrectNetwork}\n            networkReady={this.state.networkReady}\n          />\n      </Route>\n      <Route exact path=\"/\">\n        <Redirect to=\"/index\" />\n      </Route>\n      <Route path=\"/index\">\n          <div className='MainBodyElement' style={{width:'80%', padding:\"1%\"}}>\n        Unique digital art collectibles with every bit stored immutably on the Ethereum blockchain. No third party image hosting or unstable IPFS binning needed. These are BitVillains.\n        <br /><br />\n        The recruitment price of a BitVillain is determined by the <Link to=\"/bondingCurve\">Bonding Curve</Link>, meaning a higher number of BitVillains at large means a higher recruitment price. Recruiting a BitVillain also requires a contribution of <Link to=\"/plunder\">Plunder</Link>: an NFT- any ERC721 token- irrevocably given to the BitVillain contract. The Plunder NFT will be forever associated with the corresponding BitVillain.\n        <br /><br />\n        A newly recruited BitVillain is randomly assigned attributes from the <Link to=\"/attributePool\">Attribute Pool</Link>. BitVillains, their attributes, and their associated Plunder can all be viewed in the BitVillain’s details in the <Link to=\"/plunder\">Rogues' Gallery</Link> as well as other NFT galleries.\n        <br /><br />\n        BitVillain holders have two interaction options: Valhalla or Tribulation.\n        <ul>\n        <li>Sending a BitVillain to Valhalla permanently burns a BitVillain in exchange for a reward. The BitVillain’s Attributes are returned to the Attribute Pool and the holder is rewarded with 80% of the most recently paid recruitment price.</li>\n        <li>Facing a Tribulation results in two outcomes with equal likelihood. The BitVillain could be Blessed and have its pixel image lightened by 1/16. Alternatively, the BitVillain could be Punished and have its pixel image darkened by 1/16. Tribulations cost 50% of the current Valhalla reward.</li>\n        </ul>\n        Some people just want to watch NFTs burn. <Link to=\"/recruitment\">Recruit a BitVillain now.</Link>\n          </div>\n      </Route>\n      <Route path=\"/events\">\n        <Events \n            data={this.state.events}\n        />\n      </Route>\n      <Route path=\"/villain/:vId\" children={<Villain villainData={this.state.existingVillains} pixelData={this.state.pixelData} userAddress={this.state.selectedAddress} categories={Object.keys(categoriesToAttributes)}\n            tribulate={(memberId) =>\n              this._tribulate(memberId)\n            }\n            valhalla={(memberId, minAmt) =>\n              this._valhalla(memberId, minAmt)\n            }\n            pricing={this.state.pricing} />} />\n      <Route path='*'><div className=\"MainBodyElement\" style={{width:\"10%\", textAlign:'center'}}><h1>404</h1>Are you lost?</div></Route>\n      </Switch>\n      </div>\n      <ToastContainer position=\"bottom-right\" />\n      <ReactModal\n         isOpen={this.state.showModal}\n         contentLabel=\"onRequestClose Example\"\n         onRequestClose={this.handleCloseModal}\n         className=\"Modal\"\n         overlayClassName=\"Overlay\"\n      >\n        <div style={fontStyle}>\n        <h2>Warning! You do not have Web3 provider installed</h2>\n        <p>The BitVillains frontend runs entirely clientside- without a Web3 provider connected to the Ropsten network, all blockchain functionality is disabled. Please install <a href=\"http://metamask.io\" target=\"_blank\" rel=\"noopener noreferrer\">MetaMask</a> to properly access the BitVillains dApp.</p>\n        <button onClick={this.handleCloseModal}>Ok</button>\n        </div>\n      </ReactModal>\n      </Router>\n    );\n  }\n\n  componentWillUnmount() {\n  }\n\n  makeContract(addr, contractArtifact){\n    return new ethers.Contract(\n      addr,\n      contractArtifact.abi,\n      this._provider.getSigner(0)\n    );\n}\n\n  async _asyncInit() {\n    // first check the network\n    if (!(await this._checkNetwork())) {\n        return;\n    }\n    const accountList = await this._provider.listAccounts();\n    // if account list is empty, we need to prompt the user to connect\n    if (accountList.length > 0){\n        await this._connectWallet()\n    }\n}\n\n  async _connectWallet() {\n    const cachedVals = {};\n    for (const varName of DYNAMIC_CACHE_VARIABLES){\n        const cachedVal = JSON.parse(localStorage.getItem(varName));  \n        if (cachedVal)\n            cachedVals[varName] = cachedVal;\n    }\n    const statusData = this.state.statusData;\n    statusData.cachedBlock = cachedVals.cachedBlock;\n    cachedVals['statusData'] = statusData;\n    this.setState({...cachedVals});\n\n    if(!this.state.pixelData){\n    const cachedPixelData = JSON.parse(localStorage.getItem(\"pixelData\"));\n    if(cachedPixelData && Object.keys(cachedPixelData) !== 0){\n        this.setState({pixelData:cachedPixelData});\n    }\n    else{\n        this._getPixelData().then((pixelData)=>{;\n          localStorage.setItem(\"pixelData\", JSON.stringify(pixelData));\n          this.setState({pixelData});\n        });\n    }\n    }\n    let selectedAddress;\n    try {\n        [selectedAddress] = await window.ethereum.request({ method: 'eth_requestAccounts' });\n    }\n    catch (error) {\n        console.log(\"error eth_requestAccounts\", error);\n        if (error.message === \"User rejected the request.\")\n            toast.error(\"Connection to MetaMask was rejected, please try again!\");\n        return;\n    }\n    this.setState({networkReady : true})\n    this._helperContracts = this._getHelperContracts();\n    this._setupContractData();\n    this._bvContract = this.makeContract(contractAddresses['BitVillains'], BitVillainsArtifact);\n    this._initialize(selectedAddress);\n    // We first initialize ethers by creating a provider using window.ethereum\n    this._provider.on(\"pending\", (tx) =>{\n        console.log('pending');\n        console.log(tx);\n    });\n    this._provider.on(\"block\", (blockNumber) => {\n        this.setState(prevState => update_cache('currentBlock', blockNumber, prevState));\n    })\n    // TODO this should be cleared up beacuse of the copy paste code. we should parse events in one function somewhow\n    this._helperContracts['erc721'].on(\"Transfer\", (from, to, tokenId) =>{\n        if (ethers.constants.AddressZero === from){\n            tokenId = parseInt(tokenId);\n            console.log('erc71 sample mint: ', to, tokenId);\n            let helperMints = this.state.events.helperMints;\n            helperMints['rows'].push({to, tokenId});\n            this.setState({helperMints});\n        }\n    })\n    this._bvContract.on(\"MemberRecruited\", (to, id, pricePaid, nextRecruitmentPrice, newValhallaPrice, membersAlive, reserve, data) => {\n        const eventKey = `${to} ${id} ${pricePaid} ${nextRecruitmentPrice} ${newValhallaPrice} ${membersAlive} ${reserve}`;\n        let recruits = this.state.events.recruits;\n        to = ethers.utils.getAddress(to);\n        const toShort = short_addr(to);\n        id = parseInt(id);\n        pricePaid = ethers.utils.formatEther(parseInt(pricePaid).toString());\n        nextRecruitmentPrice = ethers.utils.formatEther(parseInt(nextRecruitmentPrice).toString());\n        newValhallaPrice = ethers.utils.formatEther(parseInt(newValhallaPrice).toString());\n        membersAlive = parseInt(membersAlive);\n        reserve = ethers.utils.formatEther(parseInt(reserve).toString());\n        this._memberToRecruitedMap[id] = {'to': to, 'id': id, 'pricePaid': pricePaid, 'newValhallaPrice': newValhallaPrice};\n        const txHash = data.transactionHash;\n        recruits['rows'].push({to, id, pricePaid, nextRecruitmentPrice, newValhallaPrice, membersAlive, reserve, eventKey, toShort, txHash});\n        this.setState({recruits});\n    });\n    this._bvContract.on(\"MemberToValhalla\", (owner, id, priceReceived, nextRecruitPrice, newValhallaPrice, membersAlive, reserve, data) => {\n        const eventKey = `${owner} ${id} ${priceReceived} ${nextRecruitPrice} ${newValhallaPrice} ${membersAlive} ${reserve}`;\n        const ownerShort = short_addr(owner);\n        id = parseInt(id);\n        priceReceived = ethers.utils.formatEther(parseInt(priceReceived).toString());\n        nextRecruitPrice = ethers.utils.formatEther(parseInt(nextRecruitPrice).toString());\n        newValhallaPrice = ethers.utils.formatEther(parseInt(newValhallaPrice).toString());\n        membersAlive = parseInt(membersAlive);\n        reserve = ethers.utils.formatEther(parseInt(reserve).toString());\n        let valhallas = this.state.events.valhallas;\n        const txHash = data.transactionHash;\n        valhallas['rows'].push({owner, id, priceReceived, nextRecruitPrice, newValhallaPrice, membersAlive, reserve, ownerShort, eventKey, txHash});\n        this._memberToRecruitedMap[id] = {'to': 'valhalla'};\n        this.setState({valhallas});\n    });\n    this._bvContract.on(\"Tribulation\", (who, id, isPunishment, numPunished, numBlessed, data) => {\n        const eventKey = `${who} ${id} ${isPunishment} ${numPunished} ${numBlessed}`;\n        who = ethers.utils.getAddress(who);\n        const whoShort = short_addr(who);\n        id = parseInt(id);\n        numPunished = parseInt(numPunished).toString();\n        numBlessed = parseInt(numBlessed).toString();\n        let tribulations = this.state.events.tribulations;\n        const result = isPunishment ? \"Punishment\" : \"Blessing\";\n        const txHash = data.transactionHash;\n        tribulations['rows'].push({who, id, result, numPunished, numBlessed, eventKey, whoShort, txHash});\n        this.setState({tribulations});\n    });\n    const curves = { ...this.state.curves };\n    for(var numBVAlive=0;numBVAlive<1000;numBVAlive++){\n        // INITIAL_RECRUIT_PRICE * (1 + curMembersAlive / RECRUIT_PRICE_INCREASE_RATE)\n        const rp = .01 * (numBVAlive/1 + 1);\n        const vp = Math.max(.01 * (numBVAlive) * 0.8, 0);\n        curves.recruit.push({numBVAlive, rp});\n        curves.valhalla.push({numBVAlive, vp});\n    }\n    this.setState({curves});\n    this._updateDynamicData(selectedAddress);\n    this._updateDynamicDataInterval = setInterval(() => this._updateDynamicData(selectedAddress), MILLISECONDS_IN_SECOND * 30);\n\n    // We reinitialize it whenever the user changes their account.\n    window.ethereum.on(\"accountsChanged\", ([newAddress]) => {\n      this._stopPollingData();\n      // `accountsChanged` event can be triggered with an undefined newAddress.\n      // This happens when the user removes the Dapp from the \"Connected\n      // list of sites allowed access to your addresses\" (Metamask > Settings > Connections)\n      // To avoid errors, we reset the dapp state \n      if (newAddress === undefined) {\n        return this._resetState();\n      }\n      \n      this._initialize(newAddress);\n    });\n  }\n\n  _initialize(userAddress) {\n    // This method initializes the dapp\n\n    // We first store the user's address in the component's state\n    this.setState({\n      selectedAddress: ethers.utils.getAddress(userAddress),\n    });\n\n    // Fetching the token data and the user's balance are specific to this\n    // sample project, but you can reuse the same initialization pattern.\n    this._intializeEthers();\n  }\n\n  async _intializeEthers() {\n    this._memberToRecruitedMap = {}\n    let events = {...this.state.events};\n    events.recruits['rows'] = [];\n    events.valhallas['rows'] = [];\n    events.tribulations['rows'] = [];\n    events.helperMints['rows'] = [];\n    let eventResults = await this._helperContracts['erc721'].queryFilter(this._helperContracts['erc721'].filters.Transfer());\n    for(const event of eventResults){\n        let [from, to, tokenId] = event.args;\n        if (ethers.constants.AddressZero === from){\n            tokenId = parseInt(tokenId);\n            events.helperMints['rows'].push({to, tokenId});\n        }\n    }\n    eventResults = await this._bvContract.queryFilter(this._bvContract.filters.MemberRecruited());\n    for(const event of eventResults){\n        const eventKey = `${event.args}`;\n        const txHash = event.transactionHash;\n        let [to, id, pricePaid, nextRecruitmentPrice, newValhallaPrice, membersAlive, reserve] = event.args;\n        to = ethers.utils.getAddress(to);\n        const toShort = short_addr(to);\n        id = parseInt(id);\n        pricePaid = ethers.utils.formatEther(parseInt(pricePaid).toString());\n        nextRecruitmentPrice = ethers.utils.formatEther(parseInt(nextRecruitmentPrice).toString());\n        newValhallaPrice = ethers.utils.formatEther(parseInt(newValhallaPrice).toString());\n        membersAlive = parseInt(membersAlive);\n        reserve = ethers.utils.formatEther(parseInt(reserve).toString());\n        this._memberToRecruitedMap[id] = {'to': to, 'id': id, 'pricePaid': pricePaid, 'newValhallaPrice': newValhallaPrice};\n        events.recruits['rows'].push({to, id, pricePaid, nextRecruitmentPrice, newValhallaPrice, membersAlive, reserve, eventKey, toShort, txHash});\n    }\n    eventResults = await this._bvContract.queryFilter(this._bvContract.filters.MemberToValhalla());\n    for(const event of eventResults){\n        const eventKey = `${event.args}`;\n        const txHash = event.transactionHash;\n        let [owner, id, priceReceived, nextRecruitPrice, newValhallaPrice, membersAlive, reserve] = event.args;\n        const ownerShort = short_addr(owner);\n        id = parseInt(id);\n        priceReceived = ethers.utils.formatEther(parseInt(priceReceived).toString());\n        nextRecruitPrice = ethers.utils.formatEther(parseInt(nextRecruitPrice).toString());\n        newValhallaPrice = ethers.utils.formatEther(parseInt(newValhallaPrice).toString());\n        membersAlive = parseInt(membersAlive);\n        reserve = ethers.utils.formatEther(parseInt(reserve).toString());\n        events.valhallas['rows'].push({owner, id, priceReceived, nextRecruitPrice, newValhallaPrice, membersAlive, reserve, eventKey, ownerShort, txHash})\n        this._memberToRecruitedMap[id] = {'to': 'valhalla'}\n    }\n    eventResults = await this._bvContract.queryFilter(this._bvContract.filters.Tribulation());\n    for(const event of eventResults){\n        const txHash = event.transactionHash;\n        const eventKey = `${event.args}`;\n        let [who, id, price, isPunishment, numPunished, numBlessed] = event.args;\n        who = ethers.utils.getAddress(who);\n        const whoShort = short_addr(who);\n        id = parseInt(id);\n        numPunished = parseInt(numPunished).toString();\n        numBlessed = parseInt(numBlessed).toString();\n        const result = isPunishment ? \"Punishment\" : \"Blessing\";\n        events.tribulations['rows'].push({who, id, result, numPunished, numBlessed, eventKey, whoShort, txHash})\n    }\n    this.setState(events)\n\n  }\n\n  _getHelperContracts() {\n    let helperContracts = {};\n    helperContracts['erc721'] = this.makeContract(contractAddresses['BVTest721'], BVTest721Artifact);\n    helperContracts['erc1155'] = this.makeContract(contractAddresses['BVTest1155'], BVTest1155Artifact);\n    return helperContracts;\n  }\n\n  _setupContractData(){\n    /*let attrContracts = {};\n    for (var key of Object.keys(contractAddresses['Attribute'])) {\n        let addr = contractAddresses['Attribute'][key];\n        const contract = new ethers.Contract(\n          addr,\n          AttributeArtifact.abi,\n          this._provider.getSigner(0)\n        );\n        attrContracts[key] = contract;\n        attrContracts[addr] = contract;\n    }\n    this._attrContracts = attrContracts;\n    let attrManContracts = {}\n    for (var i of Object.keys(contractAddresses['AttributeManager'])) {\n        let addr = contractAddresses['AttributeManager'][i];\n        attrManContracts[i] = new ethers.Contract(\n          addr,\n          AttributeManagerArtifact.abi,\n          this._provider.getSigner(0)\n        );\n    }\n    this._attrManContracts = attrManContracts;*/\n  }\n\n  async _getPixelData() {\n    let pixelData = {};\n    for (const attr of attrDeployData) {\n        if(!this.state.pixelData)\n            pixelData[attr['name']] = {\n                'pixels': attr['colors'],\n                'useMap': attr['pixelMap']\n            };\n    }\n    return pixelData;\n  }\n\n  parseManagerData(dataHex){\n    const numAttrs = parseInt(dataHex.slice(-EXPECTED_LENGTH_HEX_NUM_ATTR), 16);\n    const data = [];\n    for(var i = 0;i < numAttrs; i++){\n        const idx1 = -EXPECTED_LENGTH_HEX_NUM_ATTR - (i+1)*EXPECTED_LENGTH_HEX_NUM_IN_ATTR_POOL;\n        const idx2 =  -EXPECTED_LENGTH_HEX_NUM_ATTR - (i)*EXPECTED_LENGTH_HEX_NUM_IN_ATTR_POOL;\n        const numRemaining = parseInt(dataHex.slice(idx1, idx2), 16)\n        data.push(numRemaining);\n    }\n    return data;\n  }\n\n  async _updateDynamicData(userAddress) {\n    console.log('hi');\n    try{\n        let data = {};\n        data['attrData'] = {};\n        var attrManIdx = 0;\n        var attrIdx = 0;\n        const attrIdxMap = {};\n        for (const attrCategory of Object.keys(deploymentInput)) {\n            const attrs = deploymentInput[attrCategory];\n            let attrManData = await this._bvContract.m_attrMansStruct(attrManIdx);\n            const attrDataAll = this.parseManagerData(attrManData.m_sizesNumRep['_hex']);\n            let count = 0;\n            for (const attrData of attrDataAll){\n                let [attrName, attrCategory] = await this._bvContract.m_attrsStruct(attrIdx);\n                attrIdxMap[attrIdx] = attrName;\n                /*let addr = await this._attrManContracts[key].m_attrs(i);\n                let size = await this._attrManContracts[key].m_sizes(i);\n                let oSize = await this._attrManContracts[key].m_sizes_original(i);\n                let contract = this._attrContracts[addr];\n                let name = await contract.name();*/\n                data['attrData'][attrName] = {};\n                data['attrData'][attrName]['remainingGenePool'] = attrData;\n                data['attrData'][attrName]['initialGenePool'] = attrs[count]['amount'];\n                data['attrData'][attrName]['category'] = attrCategory;\n                attrIdx ++;\n                count ++;\n            }\n            attrManIdx ++;\n        }\n        data['existingVillains'] = [];\n        data['userVillains'] = {};\n        const numVillains = 1000;//parseInt((await this._bvContract.getNumberMembersAlive())['_hex']);\n        var j = 0;\n        for (j = 0; j < numVillains; j++){\n            let attrs = await this._bvContract.getMemberAttributes(j);\n            if (attrs.length < 1)\n                break;\n            let villain = {}\n            villain['attrs'] = [];\n            for (var k = 0; k < attrs.length; k++){\n                const attrIdxTmp = parseInt(attrs[k]['_hex'], 16)\n                villain['attrs'].push({'name': attrIdxMap[attrIdxTmp]});\n            }\n            let owner;\n            try{\n                // owner = await this._bvContract.ownerOf(j);\n                owner = this._memberToRecruitedMap[j].to;\n                // await this._bvContract.balanceOf(userAddress);\n            } catch (error){\n            }\n            villain['owner'] = owner;\n            const attrMap = await this._bvContract.m_attrMap(j);\n            let [sacrificeAddr, sacrificeId] = await this._bvContract.m_sacrificeMap(j);\n            sacrificeId = parseInt(sacrificeId);\n            villain['numBlessed'] = attrMap.numBlessed;\n            villain['numPunished'] = attrMap.numPunished;\n            villain['id'] = j;\n            villain['sacrificeAddr'] = sacrificeAddr;\n            let metadata = '';\n            if(ethers.constants.AddressZero !== sacrificeAddr){ \n                const nftContract =  this.makeContract(sacrificeAddr, ERC721Artifact);\n                metadata = await nftContract.tokenURI(sacrificeId);\n            }\n            villain['sacrificeId'] = sacrificeId;\n            villain['metadata'] = metadata;\n            data['existingVillains'].push(villain);\n            if(!(owner in data['userVillains']))\n                data['userVillains'][owner] = [];\n            data['userVillains'][owner].push(villain);\n        }\n        data['pricing'] = {};\n        let vp = await this._bvContract.getValhallaPrice();\n        let tp = await this._bvContract.getTribulatePrice();\n        // let tp = vp * .4;\n        // let rp = await this._bvContract.getRecruitPrice(i);\n        data['pricing']['valhalla'] = ethers.utils.formatEther(parseInt(vp['_hex']).toString());\n        data['pricing']['tribulate'] = ethers.utils.formatEther(parseInt(tp['_hex']).toString());\n        // data['pricing']['valhalla'] = vp;\n        // data['pricing']['tribulate'] = tp;\n        // data['pricing']['recruit'] = ethers.utils.formatEther(parseInt(rp['_hex']).toString());\n        data['cachedBlock'] = await this._provider.getBlockNumber();\n        this.setState(prevState => update_cache('cachedBlock', data['cachedBlock'], prevState));\n\n        this.setState(data);\n        for (var l of Object.keys(data)){\n            localStorage.setItem(l, JSON.stringify(data[l]));\n        }\n    } catch(error){\n        console.log(error)\n        console.log('caught error while updating dynamic data');\n        if(false && !(error.code===\"NETWORK_ERROR\" && error.event === \"changed\"))\n            await this._updateDynamicData(this.state.selectedAddress);\n    }\n  }\n\n  async _isApproved(nftContractAddr, sId){\n    try {\n        const nftContract =  this.makeContract(nftContractAddr, ERC721Artifact);\n        return await nftContract.getApproved(sId);\n    } catch (error){\n        return false;\n    }\n  }\n\n  async _awardItem(to, metadata) {\n    this._dismissTransactionError();\n    await this._sendTx(this._helperContracts['erc721'].awardItem, to, metadata);\n  }\n\n  async _getApproval(sAddr, sId){\n    this._dismissTransactionError();\n    await this._sendTx(this._helperContracts['erc721'].approve, this._bvContract.address, sId);\n  }\n\n  async _recruitMember(sAddr, sId) {\n    this._dismissTransactionError();\n    return await this._sendTx(this._bvContract.recruitMemberWith721, sAddr, sId, {value:ethers.utils.parseEther(\"0.5\"), gasLimit:800000});\n  }\n\n  async _tribulate(memberId) {\n    this._dismissTransactionError();\n    return await this._sendTx(this._bvContract.tribulate, memberId, {value:ethers.utils.parseEther(this.state.pricing['tribulate']), gasLimit:100000});\n  }\n\n  async _valhalla(memberId, minAmt) {\n    this._dismissTransactionError();\n    return await this._sendTx(this._bvContract.valhalla, memberId, minAmt);\n  }\n\n  async _sendTx(func, ...args){\n    try {\n      const tx = await func(...args);\n      this.setState({ txBeingSent: tx.hash });\n      toast.success(\"Transaction submitted! Follow its progress with your wallet\");\n      const receipt = await tx.wait();\n\n      if (receipt.status === 0) {\n        throw new Error(\"Transaction failed\");\n      }\n      toast.success(\"Transaction mined! Block Number: \" + receipt.blockNumber);\n      await this._updateDynamicData(this.state.selectedAddress);\n\n    } catch (error) {\n      console.log(error);\n      if (error.code === ERROR_CODE_TX_REJECTED_BY_USER) {\n        toast.error(\"Transaction was defined rejected by your wallet, please try again.\")\n      }\n      else if (error.code === -32603) {\n        toast.error(\"Transaction failed due to initial gas issue\");\n      }\n      else if (error.code === \"CALL_EXCEPTION\") {\n        toast.error(\"Transaction failed due to call exception, please check your gas limit and try again\");\n      }\n      else if (error.error.code === -32603) {\n        toast.error(error.error.message)\n      }\n\n      this.setState({ transactionError: error });\n    } finally {\n      this.setState({ txBeingSent: undefined });\n    }\n  }\n\n  // This method just clears part of the state.\n  _dismissTransactionError() {\n    this.setState({ transactionError: undefined });\n  }\n\n  // This method just clears part of the state.\n  _dismissNetworkError() {\n    this.setState({ networkError: undefined });\n  }\n\n  // This is an utility method that turns an RPC error into a human readable\n  // message.\n  _getRpcErrorMessage(error) {\n    if (error.data) {\n      return error.data.message;\n    }\n\n    return error.message;\n  }\n\n  // This method resets the state\n  _resetState() {\n    this.setState(this.initialState);\n  }\n\n  // This method checks if Metamask selected network is Localhost:8545 \n  async _checkNetwork() {\n    let ret = false;\n    let networkId = (await this._provider.getNetwork()).chainId;\n    if ( networkId === CURRENT_CHAIN_ID) {\n      ret = true;\n      this._dismissNetworkError();\n    }\n    this.setState({ \n      networkId: networkId,\n      onCorrectNetwork: ret,\n      currentNetwork: CHAIN_ID_MAP[networkId]\n    });\n    if(!ret){\n        this.setState({ \n          networkError: 'Please connect Metamask to Hardhat or Ropsten network'\n        });\n    }\n\n    return ret;\n  }\n}\n","export default __webpack_public_path__ + \"static/media/dotboundary-fixed.bc51fc31.otf\";","export default __webpack_public_path__ + \"static/media/PressStart2P.2ebf1a35.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Dapp } from \"./components/Dapp\";\n\n// We import bootstrap here, but you can remove if you want\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./fonts/DotBoundary/dotboundary-fixed.otf\";\nimport \"./fonts/PressStart2P.ttf\";\nimport './index.css';\n\n// This is the entry point of your application, but it just renders the Dapp\n// react component. All of the logic is contained in it.\n\nReactDOM.render(\n  <Dapp />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}